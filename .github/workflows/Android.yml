name: Android

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Start Android Emulator
      run: |
        # Create an AVD (Android Virtual Device) called "test".
        # The "echo no" bypasses interactive prompts (e.g., for custom SD card size).
        echo "no" | avdmanager create avd -n test -k "system-images;android-29;default;x86" --force

        # Launch the emulator in headless mode:
        #   - -no-window: run without a GUI
        #   - -no-audio: disable audio support for faster startup
        #   - -gpu swiftshader_indirect: use a software GPU rendering mode
        nohup emulator -avd test -no-window -no-audio -gpu swiftshader_indirect > /dev/null 2>&1 &

        # Wait for the emulator to fully boot.
        # Here we poll the 'sys.boot_completed' property until it returns "1".
        # The timeout command ensures that the process won't hang indefinitely (here, up to 300 seconds).
        timeout 300 sh -c 'until adb shell getprop sys.boot_completed | grep -m 1 "1"; do sleep 5; done'

        # Finally, send a key event to unlock the device (simulate pressing the Menu button).
        adb shell input keyevent 82
        
    # - name: Enable KVM
    #   run: |
    #     echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
    #     sudo udevadm control --reload-rules
    #     sudo udevadm trigger --name-match=kvm

    # - name: run tests
    #   uses: reactivecircus/android-emulator-runner@v2
    #   with:
    #     api-level: 34
    #     script: ./gradlew connectedCheck
