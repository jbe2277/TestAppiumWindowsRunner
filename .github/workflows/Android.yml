name: Android

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Start Android Emulator
      run: |
        # Add the Android SDK command-line tools to the PATH
        export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH"
        
        # Optionally, verify that avdmanager is now available:
        which avdmanager

        # List available system images (optional but useful for debugging)
        sdkmanager --list | grep "system-images"        

        # Create an AVD named "test" using the specified system image
        echo "no" | avdmanager create avd -n test -k "system-images;android-34;google_apis_playstore;x86_64" --force
        
        # Launch the emulator in headless mode:
        #   - no-window: prevents the emulator GUI from launching
        #   - no-audio: disables audio to speed up startup
        #   - gpu swiftshader_indirect: uses a software GPU renderer for CI
        nohup emulator -avd test -no-window -no-audio -gpu swiftshader_indirect > /dev/null 2>&1 &
        
        # Wait for the emulator to complete booting.
        # Poll sys.boot_completed until it returns "1"; timeout after 300 seconds.
        timeout 300 sh -c 'until adb shell getprop sys.boot_completed | grep -m 1 "1"; do sleep 5; done'
        
        # Send a key event to unlock the device.
        adb shell input keyevent 82

        
    # - name: Enable KVM
    #   run: |
    #     echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
    #     sudo udevadm control --reload-rules
    #     sudo udevadm trigger --name-match=kvm

    # - name: run tests
    #   uses: reactivecircus/android-emulator-runner@v2
    #   with:
    #     api-level: 34
    #     script: ./gradlew connectedCheck
