name: Android

on:
  push:
    paths: 
    - '**/Android.yml'

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Enable KVM
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm

    - name: Start Android Emulator
      run: |
        set -x

        export PATH="$ANDROID_SDK_ROOT/emulator:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH"
        
        sdkmanager "system-images;android-35;google_apis_playstore;x86_64"
        if [ ! -d "$ANDROID_SDK_ROOT/system-images/android-35/google_apis_playstore/x86_64" ]; then
          echo "System image not found. Installation might have failed."
          exit 1
        fi

        echo "no" | avdmanager create avd -n test -k "system-images;android-35;google_apis_playstore;x86_64" --force

        echo "no"


        cat ~/.android/avd/*.log || echo "No logs found"; 
        exit 1; 
        
        if [[ ! -f "$HOME/.android/avd/test.avd/config.ini" ]]; then
          echo "AVD creation failed. Check logs for details."
          exit 1
        fi

        # Launch the emulator in headless mode:
        #   - no-window: prevents the emulator GUI from launching
        #   - no-audio: disables audio to speed up startup
        #   - gpu swiftshader_indirect: uses a software GPU renderer for CI
        emulator -list-avds
        nohup emulator -avd test -no-window -no-audio -gpu swiftshader_indirect > emulator.log 2>&1 &
        sleep 5
        cat emulator.log
        
        # Check emulator status
        sleep 5
        adb devices
        adb devices || { echo "ADB not detecting devices"; exit 1; }

        # Wait for the emulator to complete booting.
        # Poll sys.boot_completed until it returns "1"; timeout after 300 seconds.
        timeout 300 sh -c 'until adb shell getprop sys.boot_completed | grep -m 1 "1"; do sleep 5; done'
        
        # Send a key event to unlock the device.
        adb shell input keyevent 82

        
    # List available system images (optional but useful for debugging)
    # sdkmanager --list | grep "system-images"

    # echo "ls emulator"
    # ls -l $ANDROID_SDK_ROOT/emulator
    # echo "ls cmdline-tools"
    # ls -l $ANDROID_SDK_ROOT/cmdline-tools/latest/bin

    # # Optionally, verify that avdmanager is now available:
    # which avdmanager
    # which emulator || { echo "Emulator binary not found"; exit 1; }

    # Ensure the directory exists
    # ls -l $ANDROID_SDK_ROOT/system-images/android-35/google_apis_playstore/x86_64


    # - name: run tests
    #   uses: reactivecircus/android-emulator-runner@v2
    #   with:
    #     api-level: 34
    #     script: ./gradlew connectedCheck
